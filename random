import pandas as pd

# Load data
df_salesforce = pd.read_excel('Data/Closed_Won Reasons/Closed_Won_Product_Capability.xlsx')

# Function to check for missing values, column types, and add dataset information
def check_missing_and_categorize(df):
    # Initialize a dictionary to store column types and missing value information
    column_info = {'Column': [], 'Type': [], 'Missing Values': [], 'Missing Percentage': []}
    
    # Total rows and columns in the dataset
    total_rows = len(df)
    total_columns = len(df.columns)
    
    # Calculate the memory usage of the dataframe
    memory_usage = df.memory_usage(deep=True).sum() / (1024**2)  # Memory in MB

    for col in df.columns:
        # Detect the data type of the column
        if df[col].dtype == 'object':
            column_type = 'text'
        elif pd.api.types.is_numeric_dtype(df[col]):
            column_type = 'numerical'
        else:
            column_type = 'both'  # In case there's a mixed type (though rare)

        # Check for missing values (NaNs and empty strings for text columns)
        if column_type == 'text':
            missing_count = df[col].isna().sum() + (df[col] == '').sum()
        else:
            missing_count = df[col].isna().sum()

        missing_percentage = (missing_count / total_rows) * 100
        
        # Append the info to the dictionary
        column_info['Column'].append(col)
        column_info['Type'].append(column_type)
        column_info['Missing Values'].append(missing_count)
        column_info['Missing Percentage'].append(missing_percentage)

    # Convert the dictionary to a dataframe for better readability
    missing_values_df = pd.DataFrame(column_info)

    # Add total rows, columns, and memory usage summary
    dataset_summary = pd.DataFrame({
        'Dataset Information': ['Total Rows', 'Total Columns', 'Memory Usage (MB)'],
        'Value': [total_rows, total_columns, f'{memory_usage:.2f} MB']
    })

    return missing_values_df, dataset_summary

# Call the function to check missing values and categorize columns
missing_values_df, dataset_summary = check_missing_and_categorize(df_salesforce)

# Print the dataset summary
print("\n==== DATASET SUMMARY ====")
print(dataset_summary.to_string(index=False))

# Styling the missing values dataframe to highlight the column headers in blue
styled_df = missing_values_df.style.set_properties(**{'text-align': 'center'}) \
    .set_table_styles([{
        'selector': 'th',
        'props': [('background-color', 'lightblue'), ('font-weight', 'bold')]
    }]) \
    .format({'Missing Percentage': '{:.2f}%'})

# Display the styled dataframe in Jupyter or print it in console (for basic environments)
styled_df = styled_df.hide_index()
styled_df
