# Apply full preprocessing to the given test text and all the steps to handle LDA
def full_preprocess(text, word_counter=None, min_freq=2):
    text = expand_contractions(text)  # Step 1: Expand contractions
    text = remove_hyphens_and_special_chars(text)  # Step 2: Remove hyphens and unwanted characters
    text = text.lower()  # Step 3: Convert to lowercase
    text = remove_digits(text)  # Step 4: Remove digits
    text = remove_extra_marks(text)  # Step 5: Remove extra marks
    text = normalize_phrases(text)  # Step 6: Normalize multi-word phrases
    text = remove_stopwords(text)  # Step 7: Remove stopwords
    text = lemmatize(text)  # Step 8: Lemmatization
    text = remove_invalid_tokens(text)  # Step 9: Remove invalid tokens (like 'th')
    text = remove_single_char_tokens(text)  # Step 10: Remove single-character tokens
    
    # Remove rare words based on frequency
    if word_counter is not None:
        text = remove_rare_words(text, word_counter, min_freq=min_freq)
    
    return text

# Test preprocessing on example text
first_row_text = """
The account opening process at the Union Bank was tedious. The client acquisition team acquired new clients and also worked on client requests. 
The market disruption caused by new accounts opening led to issues with cash liquidity and core cash management. The commercial card was launched after a smooth bb transfer. 
"""

# Small word counter for testing
test_word_counter = Counter(first_row_text.lower().split())

# Apply the full preprocessing pipeline to the test text
processed_first_row = full_preprocess(first_row_text, word_counter=test_word_counter, min_freq=1)

# Print the original and processed text
print("Original Text:\n", first_row_text)
print("\nProcessed Text:\n", processed_first_row)
