# Load necessary libraries and Spacy model
import pandas as pd
import spacy
from collections import Counter

# Load Spacy model
nlp = spacy.load('en_core_web_sm', disable=['parser', 'ner'])
nlp.max_length = 2000000  # Increase SpaCy's max_length to handle larger texts

# Load data
df_salesforce = pd.read_excel('Data/Closed_Won Reasons/Closed_Won_Product_Capability.xlsx')

# Total count of deals
total_deals = len(df_salesforce)
print(f"Total Count of Deals: {total_deals}\n")

# Count missing values in each relevant column
missing_record_comment = df_salesforce['record_comment_text'].isna().sum()
missing_executive_summary = df_salesforce['executive_summary_text'].isna().sum()
missing_win_loss_comments = df_salesforce['win_loss_comments_text'].isna().sum()

# Combine text columns and calculate missing values in the combined text column
df_salesforce['combined_text'] = df_salesforce[['record_comment_text', 'executive_summary_text', 'win_loss_comments_text']].apply(lambda x: ' '.join(x.dropna()), axis=1)
missing_combined_text = df_salesforce['combined_text'].isna().sum()

# Print missing values for each column
print(f"Missing values in 'record_comment_text': {missing_record_comment}")
print(f"Missing values in 'executive_summary_text': {missing_executive_summary}")
print(f"Missing values in 'win_loss_comments_text': {missing_win_loss_comments}")
print(f"Missing values in 'combined_text': {missing_combined_text}\n")

# Count RST deals in 'account_eci' and 'combined_text' columns
rst_deals_account_eci = df_salesforce[df_salesforce['account_eci'] == 'RST'].shape[0]
rst_deals_combined_text = df_salesforce[df_salesforce['combined_text'].str.contains('RST', na=False)].shape[0]

# Print RST deals counts
print(f"Count of RST Deals in 'account_eci': {rst_deals_account_eci}")
print(f"Count of RST Deals in 'combined_text': {rst_deals_combined_text}\n")

# Filter out Non-RST deals
non_rst_data = df_salesforce[df_salesforce['account_eci'] != 'RST']
print(f"Count of Non-RST Deals: {non_rst_data.shape[0]}\n")

# Separate dataframes for RST and Non-RST deals
rst_data = df_salesforce[df_salesforce['account_eci'] == 'RST']
print(f"RST DataFrame contains {rst_data.shape[0]} rows.")
print(f"Non-RST DataFrame contains {non_rst_data.shape[0]} rows.\n")

# Verify empty values in Non-RST deals
empty_combined_text_count = non_rst_data['combined_text'].isna().sum() + (non_rst_data['combined_text'] == '').sum()
empty_record_comment_count = non_rst_data['record_comment_text'].isna().sum() + (non_rst_data['record_comment_text'] == '').sum()
empty_executive_summary_count = non_rst_data['executive_summary_text'].isna().sum() + (non_rst_data['executive_summary_text'] == '').sum()

# Print empty values count in Non-RST data
print(f"Empty rows in Non-RST 'combined_text': {empty_combined_text_count}")
print(f"Empty rows in Non-RST 'record_comment_text': {empty_record_comment_count}")
print(f"Empty rows in Non-RST 'executive_summary_text': {empty_executive_summary_count}")

# Print the total number of rows left for analysis after filtering empty rows in Non-RST data
non_rst_filtered = non_rst_data[non_rst_data['combined_text'].notna() & (non_rst_data['combined_text'] != '')]
print(f"Total rows for analysis after excluding empty rows in Non-RST data: {len(non_rst_filtered)}")
