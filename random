# Combine the results into a single column without warnings
df_sample['final_response'] = results

# Check output of the first few responses to debug
print(df_sample['final_response'].head())  # This will help us see what the generation model is returning

# Extract the topic alignment and explanation into separate columns
def extract_information(text):
    lines = text.split("\n")
    category = "Not available"
    explanation = "Not available"
    
    for line in lines:
        if line.startswith("Category:"):
            parts = line.split(": ", 1)
            if len(parts) > 1:
                category = parts[1]
        elif line.startswith("Explanation:"):
            parts = line.split(": ", 1)
            if len(parts) > 1:
                explanation = parts[1]
    
    return category, explanation

# Apply the extraction function and create new columns without warnings
df_sample[['category', 'explanation']] = df_sample['final_response'].apply(lambda x: pd.Series(extract_information(x)))

# Save the results to a CSV file with the new columns
df_sample.to_csv('new_Deals_Topic_Classification_Output.csv', index=False)

# Display the DataFrame to verify results
print(df_sample[['category', 'explanation']])
