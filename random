# Apply full preprocessing to the given test text with improved order of operations
def full_preprocess(text, word_counter=None, min_freq=2):
    text = expand_contractions(text)  # Step 1: Expand contractions
    text = remove_hyphens_and_special_chars(text)  # Step 2: Remove hyphens and unwanted characters
    text = text.lower()  # Step 3: Convert to lowercase
    text = normalize_phrases(text)  # Step 4: Normalize multi-word phrases (move this earlier)
    text = remove_digits(text)  # Step 5: Remove digits
    text = remove_extra_marks(text)  # Step 6: Remove extra marks
    text = remove_stopwords(text)  # Step 7: Remove stopwords (move this after phrase normalization)
    text = lemmatize(text)  # Step 8: Lemmatization
    text = remove_invalid_tokens(text)  # Step 9: Remove invalid tokens (like 'th')
    text = remove_single_char_tokens(text)  # Step 10: Remove single-character tokens

    # Remove rare words based on frequency
    if word_counter is not None:
        text = remove_rare_words(text, word_counter, min_freq=min_freq)
    
    return text
