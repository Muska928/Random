# Function to normalize phrases (like "account open", "open account", etc.)
def normalize_phrases(text):
    # Replace variations of phrases with a single standard phrase
    text = re.sub(r'\baccount open\b|\bopen account\b|\baccount opening\b', 'account open', text)
    text = re.sub(r'\bnew dda\b|\bnew deposit account\b', 'new dda', text)
    return text

text = normalize_phrases(text) 

# Function to get n-gram frequency
def get_ngrams(corpus, n=1):
    """Returns the n most common n-grams from a corpus"""
    ngrams = zip(*[corpus[i:] for i in range(n)])
    return Counter([' '.join(ngram) for ngram in ngrams]).most_common(30)  # Top 30 n-grams

# Function to plot n-grams
def plot_ngrams(ngram_freq, title):
    ngram_df = pd.DataFrame(ngram_freq, columns=['ngram', 'frequency'])
    
    # Plot using Seaborn
    plt.figure(figsize=(12, 8))
    sns.barplot(x='ngram', y='frequency', data=ngram_df, palette='coolwarm')
    
    # Add frequency numbers on top of bars
    for index, value in enumerate(ngram_df['frequency']):
        plt.text(index, value, str(value), ha='center', va='bottom', fontsize=10)
    
    plt.xticks(rotation=45, ha='right', fontsize=12)
    plt.yticks(fontsize=12)
    plt.title(f'Top 30 {title}', fontsize=16, weight='bold')
    plt.xlabel(f'{title}', fontsize=14, weight='bold')
    plt.ylabel('Frequency', fontsize=14, weight='bold')
    plt.tight_layout()
    plt.show()
