def classify_texts(df_batch):
    assigned_categories = []
    specific_processes = []
    account_opening_flags = []
    repetition_labels = []

    # Define the updated prompt template for classification and location-specific context
    updated_prompt_template = """
    You are an AI tasked with reading a text related to financial and business processes. First, determine if this case is related to **Account Opening**.
    
    - If yes, keep the assigned category as **Account Opening** and include any specific location mentioned (e.g., "Account Opening in Dubai").
    - If no, based on your understanding of the text, assign a suitable category that reflects the context of the case and any relevant location (e.g., "Personnel Change in London").

    After categorizing the text, you must also describe the specific process in 2-3 words that is happening in the text.

    Text: "{input_text}"

    ### Response Format:
    1. Category: [Assigned Category with Location (if applicable)]
    2. Specific Process: [2-3 word process description]
    """

    batch_texts = df_batch["combined_text"].tolist()

    for text in batch_texts:
        # Check if the text has been previously classified
        if text in assignment_memory:
            assigned_category, specific_process = assignment_memory[text]
            assigned_categories.append(assigned_category)
            specific_processes.append(specific_process)
            account_opening_flags.append("Yes" if "Account Opening" in assigned_category else "No")
            repetition_labels.append("Repetitive")
        else:
            # Create prompt and generate response
            prompt = updated_prompt_template.format(input_text=text)
            response = generation_pipeline(prompt, max_new_tokens=200, num_return_sequences=1, pad_token_id=tokenizer.eos_token_id)
            
            # Extract the generated text
            generated_text = response[0]['generated_text'] if response else "No valid response"
            
            # Extract the category and specific process
            category, process = extract_category_process(generated_text)
            
            assigned_categories.append(category)
            specific_processes.append(process)
            repetition_labels.append("Unique")
            
            # Store the result for future reuse
            assignment_memory[text] = (category, process)
            
            # Set the "Account Opening" flag
            account_opening_flags.append("Yes" if "Account Opening" in category else "No")
    
    # Add the classification results, repetition label, and flags to the DataFrame
    df_batch['assigned_category'] = assigned_categories
    df_batch['specific_process'] = specific_processes
    df_batch['is_related_to_account_opening'] = account_opening_flags
    df_batch['repetition_label'] = repetition_labels
    
    return df_batch
