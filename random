import pandas as pd
from sklearn.feature_extraction.text import CountVectorizer
import matplotlib.pyplot as plt
import seaborn as sns

# Load your short texts dataset (replace with your actual file)
short_texts = pd.read_csv('short_texts.csv')  # Assuming 'combined_text' column exists

# Drop any NaN values in 'combined_text' if they exist
short_texts = short_texts.dropna(subset=['combined_text'])

# 1. Word Frequency Analysis
# CountVectorizer for word frequency (unigrams)
vectorizer = CountVectorizer(ngram_range=(1, 1), stop_words='english')  # Unigram with stop words removed
X = vectorizer.fit_transform(short_texts['combined_text'])

# Sum word frequencies across all documents
word_freq = pd.DataFrame(X.toarray(), columns=vectorizer.get_feature_names_out())
word_freq_sum = word_freq.sum().sort_values(ascending=False)

# Display top 20 most frequent words
print("Top 20 Most Frequent Words:")
print(word_freq_sum.head(20))

# 2. Bigram and Trigram Analysis
# CountVectorizer for bigrams and trigrams
ngram_vectorizer = CountVectorizer(ngram_range=(2, 3), stop_words='english')  # Bigrams and trigrams
X_ngrams = ngram_vectorizer.fit_transform(short_texts['combined_text'])

# Sum n-gram frequencies across all documents
ngram_freq = pd.DataFrame(X_ngrams.toarray(), columns=ngram_vectorizer.get_feature_names_out())
ngram_freq_sum = ngram_freq.sum().sort_values(ascending=False)

# Display top 20 most frequent n-grams
print("\nTop 20 Most Frequent N-grams (Bigrams and Trigrams):")
print(ngram_freq_sum.head(20))

# 3. Visualization: Word Frequency Bar Plot
plt.figure(figsize=(10, 6))
sns.barplot(x=word_freq_sum.head(20).index, y=word_freq_sum.head(20).values)
plt.xticks(rotation=45, ha='right')
plt.title('Top 20 Most Frequent Words')
plt.ylabel('Frequency')
plt.xlabel('Words')
plt.tight_layout()
plt.show()

# 4. Visualization: N-gram Frequency Bar Plot
plt.figure(figsize=(10, 6))
sns.barplot(x=ngram_freq_sum.head(20).index, y=ngram_freq_sum.head(20).values)
plt.xticks(rotation=45, ha='right')
plt.title('Top 20 Most Frequent N-grams (Bigrams and Trigrams)')
plt.ylabel('Frequency')
plt.xlabel('N-grams')
plt.tight_layout()
plt.show()
